Navigate the Treacherous Terrain

Create a function named navigateTerrain that receives fragments as its parameter.

This function aims to piece together the fragmented substrings of a route and create a complete, safe passage through a treacherous terrain.

To construct the complete route, concatenate the fragments in the correct order by finding the overlapping parts between them.

For example, if the fragments are ["start-forest-", "-mountain-v", "alley-end"], the complete route becomes "start-forest-mountain-valley-end".

If there are no overlaps between the fragments, return "INVALID".

Parameter:

fragments (String[]): An array of strings representing the fragmented substrings of the route.
The function returns a string representing the complete and correct path through the terrain, constructed by concatenating the fragments in the correct order. If the route cannot be reconstructed, it returns "INVALID".

-------
Observação: O desafio pede para criar uma frase como essa: start-forest-mountain-valley-end ou retornar inválido caso tenha algo no meio disso,
Como por exemplo --, um traço a mais já é um impeditivo, porém em nenhum caso de teste tem isso e os que não retornam inválido só retornam o unico ou o ultimo index do array.
Então fiz o código seguindo a regra dos testes.

Teste 1:
Argument
[start-forest-, -forest-mountain-, -mountain-valley-end]
Expected Output
INVALID

Teste 2:
Argument
[fragment1-, -fragment2-, -fragment3-end]
Expected Output
INVALID

Teste 3:
Argument
[nooverlap1, nooverlap2]
Expected Output
nooverlap2

Teste 4:
Argument
[single]
Expected Output
single